name: 'CI/CD'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build the Docker image
        run: |
          docker-compose build
          docker-compose up -d
          docker-compose exec -T osrs-progress-tracker-backend-app python -m pip install --upgrade pip

      - name: Lint and Format Checker
        run: |
          # lint and format backend
          docker-compose exec -T osrs-progress-tracker-backend-app pip install flake8 black==22.3.0
          # stop the build if there are Python syntax errors or undefined names
          docker-compose exec -T osrs-progress-tracker-backend-app flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          docker-compose exec -T osrs-progress-tracker-backend-app flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          # exit-zero if code does not meet black formatter standards
          docker-compose exec -T osrs-progress-tracker-backend-app black . --check

          # lint frontend
          docker-compose exec -T osrs-progress-tracker-frontend-app-testing yarn install --development
          docker-compose exec -T osrs-progress-tracker-frontend-app-testing yarn run lint

      - name: Run Unit Tests
        run: |
          # run unit tests for backend
          docker-compose exec -T osrs-progress-tracker-backend-app pip install pytest
          docker-compose exec -T osrs-progress-tracker-backend-app pytest .

          # run unit tests for frontend
          docker-compose exec -T osrs-progress-tracker-frontend-app-testing yarn run test .

  deploy:
      name: Deploy Applications Using Fly
      runs-on: ubuntu-latest
      needs: [build]
      if: github.ref == 'refs/heads/main'
      steps:
        - uses: actions/checkout@v3
        - uses: superfly/flyctl-actions/setup-flyctl@master
        - run: |
            flyctl deploy --remote-only --dockerfile Dockerfile -a osrs-progress-tracker
            flyctl deploy --remote-only --dockerfile Dockerfile.deploy.dashboards -a osrs-progress-tracker-ui

